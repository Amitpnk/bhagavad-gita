{"version":3,"sources":["components/common/characters/CharacterItem.js","components/common/Spinner.js","components/common/characters/CharacterGrid.js","components/common/SelectInput.js","components/home/HomePage.js","components/about/AboutPage.js","components/common/Header.js","components/common/Footer.js","components/PageNotFound.js","api/apiUtils.js","api/cardApi.js","redux/actions/cardActions.js","redux/actions/apiStatusActions.js","redux/actions/actionTypes.js","components/common/TextInput.js","components/cards/CardForm.js","components/cards/ManageCardPage.js","components/cards/CardList.js","components/cards/CardPage.js","api/groupApi.js","redux/actions/groupActions.js","components/groups/GroupList.js","components/groups/GroupsPage.js","components/groups/GroupForm.js","components/groups/ManageGroupPage.js","components/cardview/cardview.js","components/AuthContext.js","components/auth/Auth.js","components/Callback.js","components/App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/apiStatusReducer.js","redux/reducers/index.js","redux/reducers/groupReducer.js","redux/reducers/cardReducer.js","index.js","redux/configureStore.js","img/card-img.jpg","img/logo3.png"],"names":["CharacterItem","item","console","log","className","src","CardImg","alt","name","description","to","id","href","download","code","window","location","protocol","host","expireDate","Spinner","style","margin","display","CharacterGrid","items","isLoading","map","key","char_id","SelectInput","label","onChange","defaultOption","error","value","options","for","option","text","HomePage","useState","setItems","groups","setGroups","setIsLoading","query","setQuery","useEffect","a","axios","process","REACT_APP_API_URL","result","data","resultGroup","fetchItems","class","novalidate","g","event","target","filter","x","cards","includes","prevCard","type","placeholder","e","role","data-toggle","aria-controls","aria-selected","AboutPage","Component","Header","activeStyle","color","this","props","auth","isAuthenticated","login","logout","userHasScopes","LogoImg","height","width","data-target","aria-expanded","aria-label","activestyle","onClick","Footer","Date","getFullYear","PageNotFound","handleResponse","response","ok","json","status","Error","handleError","baseUrl","loadCards","dispatch","fetch","then","catch","loadCardSuccess","deleteCard","card","deleteCardOptimistic","cardId","method","TextInput","wrapperClass","length","htmlFor","CardForm","onSave","saving","errors","startDate","setStartDate","onSubmit","url","marginTop","selected","date","dateFormat","disabled","newCard","mapDispatchToProps","saveCard","getState","headers","body","JSON","stringify","cardApi","savedCard","updateCardSuccess","createCardSuccess","connect","state","ownProps","match","params","find","getCardById","history","setCard","setErrors","setSaving","alert","preventDefault","Object","keys","formIsValid","toast","success","push","message","CardList","onDeleteClick","prototype","PropTypes","array","isRequired","func","CardPage","redirectToAddCardPage","handleDeleteCard","actions","autoClose","loading","marginBottom","setState","apiCallsInProgress","bindActionCreators","cardActions","loadGroups","loadGroupSuccess","deleteGroup","group","deleteGroupOptimistic","groupId","GroupList","isActive","GroupsPage","redirectToAddGroupPage","handleDeleteGroup","cardSelected","groupActions","GroupForm","paddingTop","selectedValues","onSelect","displayValue","showCheckbox","closeIcon","closeOnSelect","checked","newGroup","saveGroup","groupApi","savedGroup","updateGroupSuccess","createGroupSuccess","getGroupBySlug","setGroup","prevGroup","CardView","useParams","synonmys","meaning","AuthContext","React","createContext","Auth","localStorage","setItem","auth0","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","redirectLocation","getItem","parse","removeItem","expiresAt","expiresIn","getTime","scopes","scope","requestedScopes","clientID","REACT_APP_AUTH0_CLIENT_ID","returnTo","getAccessToken","getProfile","cb","userProfile","client","userInfo","profile","WebAuth","domain","REACT_APP_AUTH0_DOMAIN","redirectUri","REACT_APP_AUTH0_CALLBACK_URL","audience","REACT_APP_AUTH0_AUDIENCE","responseType","grantedScopes","split","every","Callback","test","hash","App","Provider","exact","path","component","render","ManageGroupPage","ManageCardPage","hideProgressBar","Boolean","hostname","actionTypeEndsInSuccess","substring","rootReducer","combineReducers","initialState","action","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a0823e4a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport CardImg from \"../../../img/card-img.jpg\";\r\n\r\nconst CharacterItem = ({ item }) => {\r\n    console.log(item);\r\n    return (\r\n        <div className=\"col-xl-3 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n            <div className=\"card card-figure has-hoverable\">\r\n                <figure className=\"figure\">\r\n                    <div className=\"figure-img\">\r\n                        <img className=\"img-fluid\" src={CardImg}\r\n                            alt=\"card-img\" />\r\n                        <div className=\"figure-description\">\r\n                            <h6 className=\"figure-title\"> {item.name} </h6>\r\n                            <p className=\"text-muted mb-0\">\r\n                                <small>{item.description}\r\n                                </small>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"figure-action\">\r\n                            {/* <a href=\"#\" className=\"btn btn-block btn-sm btn-primary\">Meaning</a> */}\r\n                            <Link to={`/cardview/` + item.id} className=\"btn btn-block btn-sm btn-primary\" >Meaning</Link>\r\n                        </div>\r\n                    </div>\r\n                    <figcaption className=\"figure-caption\">\r\n                        <ul className=\"list-inline d-flex text-muted mb-0\">\r\n\r\n                            <li className=\"list-inline-item text-truncate mr-auto\">\r\n                                <a href={CardImg} download> <span className=\"badge badge-info\">{item.code}</span></a>\r\n                            </li>\r\n                            <li className=\"list-inline-item \">\r\n                                <a href=\"#\"> <span><i\r\n                                    className=\"fa fa-star \"></i></span></a>\r\n                            </li>\r\n                            <li className=\"list-inline-item\">\r\n\r\n                                <a href={`mailto:?subject=Bookmark Dashboard: sharing '${item.name}'&body=Hello,%0D%0A%0D%0AI would like to share this url with you:\r\n                                        ${window.location.protocol + \"//\" + window.location.host + \"/cardview/\" + item.id} \r\n                                        ${item.expireDate ? \"which will be expire before\" + item.expireDate : \"\"} %0D%0A%0D%0A Regards,`} className=\"fa fa-share-alt\" >&nbsp;</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item\">\r\n                                <a href={CardImg} download> <span><i\r\n                                    className=\"fa  fa-download \"></i></span></a>\r\n                            </li>\r\n                        </ul>\r\n                    </figcaption>\r\n                </figure>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterItem\r\n","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n       \r\n        <span className=\"dashboard-spinner spinner-secondary spinner-xxl\" \r\n        style={{  margin: 'auto', display: 'block' }}></span>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport CharacterItem from './CharacterItem'\r\nimport Spinner from '../Spinner'\r\n\r\nconst CharacterGrid = ({ items, isLoading }) => {\r\n  return isLoading ? (\r\n\r\n    <Spinner />\r\n  ) : (\r\n      <>\r\n        {items.map((item) => (\r\n          <CharacterItem key={item.char_id} item={item}></CharacterItem>\r\n        ))}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default CharacterGrid\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectInput = ({\r\n  name,\r\n  label,\r\n  onChange,\r\n  defaultOption,\r\n  value,\r\n  error,\r\n  options\r\n}) => {\r\n  return (\r\n    <>\r\n      <label for=\"validationCustom01\">{label}</label>\r\n      <select\r\n        name={name}\r\n        // value={value}\r\n        onChange={onChange}\r\n        className=\"form-control\">\r\n        <option value=\"\">{defaultOption}</option>\r\n        {\r\n          options.map(option => {\r\n            return (\r\n              <option key={option.value} value={option.value}>\r\n                {option.text}\r\n              </option>\r\n            );\r\n          })\r\n        }\r\n      </select >\r\n      { error && <div className=\"valid-feedback\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  error: PropTypes.string,\r\n  options: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default SelectInput;\r\n","import React, { useState, useEffect } from 'react'\r\nimport CharacterGrid from \"../common/characters/CharacterGrid\";\r\nimport axios from 'axios'\r\nimport SelectInput from \"../common/SelectInput\";\r\n\r\nconst HomePage = () => {\r\n\r\n    const [items, setItems] = useState([])\r\n    const [groups, setGroups] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [query, setQuery] = useState('')\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            setIsLoading(true)\r\n            const result = await axios(\r\n                `${process.env.REACT_APP_API_URL}/cards`\r\n            )\r\n            setItems(result.data)\r\n\r\n            const resultGroup = await axios(\r\n                `${process.env.REACT_APP_API_URL}/groups`\r\n            )\r\n            setGroups(resultGroup.data)\r\n            setIsLoading(false)\r\n        }\r\n        fetchItems()\r\n    }, [])\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        console.log(name);\r\n        console.log(value);\r\n\r\n        const g = groups.filter(g => g.id === +value).map(x => x.cards);\r\n\r\n        const itemFilter = items.filter((x) => g[0].includes(x.id))\r\n\r\n        // setItems(\r\n        //     items.filter((x) => g[0].includes(x.id))\r\n        // );\r\n        setItems(prevCard => ({\r\n            ...prevCard,\r\n            [items]: items.filter((x) => g[0].includes(x.id))\r\n        }));\r\n        console.log(items);\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-wrapper\">\r\n            <div className=\"container-fluid dashboard-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">Cards </h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-body\">\r\n                                        <form class=\"needs-validation\" novalidate>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12 mb-2\">\r\n                                                    <SelectInput\r\n                                                        name=\"solutionId\"\r\n                                                        label=\"Solution\"\r\n                                                        defaultOption=\"Choose solution to your problem\"\r\n                                                        value={groups.id || \"\"}\r\n                                                        options={groups.map(g => ({\r\n                                                            value: g.id,\r\n                                                            text: g.name\r\n                                                        }))}\r\n                                                        onChange={handleChange}\r\n                                                    // error={errors.author}\r\n                                                    />\r\n\r\n                                                </div>\r\n                                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12 mb-2\">\r\n                                                    <label for=\"validationCustom02\">Search</label>\r\n                                                    {/* <input type=\"text\" class=\"form-control\" id=\"validationCustom02\" placeholder=\"Search verses | sloka | keyword\" /> */}\r\n\r\n\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control \"\r\n                                                        placeholder=\"Search verses | sloka | keyword\"\r\n                                                        onChange={e => setQuery(e.target.value)}\r\n                                                        value={query}\r\n                                                    />\r\n\r\n\r\n                                                    {/* <div class=\"valid-feedback\">\r\n                                                        Looks good!\r\n                                                    </div> */}\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-10 col-lg-10 col-md-10 col-sm-10 col-10\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <div class=\"pills-regular\">\r\n                                        <ul class=\"nav nav-pills mb-1\" id=\"pills-tab\" role=\"tablist\">\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link active\" id=\"pills-home-tab\" data-toggle=\"pill\" href=\"#all\" role=\"tab\" aria-controls=\"all\" aria-selected=\"true\">All</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" id=\"pills-profile-tab\" data-toggle=\"pill\" href=\"#memorization\" role=\"tab\" aria-controls=\"memorization\" aria-selected=\"false\">For memorization <span class=\"badge badge-primary badge-pill\">101</span></a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"#favorite\" role=\"tab\" aria-controls=\"favorite\" aria-selected=\"false\">My favorite <span class=\"badge badge-primary badge-pill\">0</span></a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <CharacterGrid isLoading={isLoading}\r\n                                // items={items.filter(v => {\r\n                                //     if (v.name.toLowerCase().indexOf(query) >= 0\r\n                                //         || v.description.toLowerCase().indexOf(query) >= 0\r\n                                //         || v.meaning.toLowerCase().indexOf(query) >= 0\r\n                                //         || v.code.toLowerCase().indexOf(query) >= 0\r\n                                //     ) {\r\n                                //         return true;\r\n                                //     }\r\n                                //     return false;\r\n                                // })}\r\n                                items={items}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react'\r\n\r\nclass AboutPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard-wrapper\">\r\n                <div className=\"container-fluid dashboard-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title text-center\">About us </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h3  >Application is created mainly to help you based on problem you are looking for, choose your problem based on it related slokas will be displayed on screen</h3>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h3 >Any suggestion or improvement please drop mail amit.naik8103@gmail.com</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutPage;","import React, { Component } from 'react'\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport LogoImg from \"../../img/logo3.png\";\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        const activeStyle = { color: \"#F15B2A\" };\r\n        const { isAuthenticated, login, logout, userHasScopes } = this.props.auth;\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg bg-white fixed-top\">\r\n                <Link to=\"/home\" className=\"navbar-brand\" >Bhagavad Gita</Link>\r\n                <img className=\"img-fluid\" src={LogoImg} alt=\"card-img\" height={20} width={40} />\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto navbar-right-top\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/home\" className=\"nav-link\" activestyle={activeStyle}>Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/cards\" className=\"nav-link\" activestyle={activeStyle}>Cards</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/groups\" className=\"nav-link\" activestyle={activeStyle}>Groups</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\" activestyle={activeStyle}>About</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link onClick={isAuthenticated() ? logout : login} className=\"nav-link\" activestyle={activeStyle}>  {isAuthenticated() ? \"Log Out\" : \"Log In\"}</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                            Copyright © {(new Date().getFullYear())} <a href=\"http://codewithamit.com\">Codewithamit.com</a>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 text-right\">\r\n                            Powered by Code with amit\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst PageNotFound = () => <h1>Oops! Page not found</h1>;\r\n\r\nexport default PageNotFound;\r\n\r\n\r\n\r\n\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/cards/\";\r\n\r\nexport function getCards() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveCard(card) {\r\n  return fetch(baseUrl + (card.id || \"\"), {\r\n    method: card.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(card)\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteCard(cardId) {\r\n  return fetch(baseUrl + cardId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport * as cardApi from \"../../api/cardApi\";\r\nimport { beginApiCall, apiCallError } from \"./apiStatusActions\";\r\n\r\nexport function loadCardSuccess(cards) {\r\n    return { type: types.LOAD_CARDS_SUCCESS, cards }\r\n}\r\n\r\nexport function createCardSuccess(card) {\r\n    return { type: types.CREATE_CARD_SUCCESS, card };\r\n}\r\n\r\nexport function updateCardSuccess(card) {\r\n    return { type: types.UPDATE_CARD_SUCCESS, card };\r\n}\r\n\r\nexport function deleteCardOptimistic(card) {\r\n    return { type: types.DELETE_CARD_OPTIMISTIC, card };\r\n}\r\n\r\nexport function loadCards() {\r\n    return function (dispatch) {\r\n        dispatch(beginApiCall());\r\n        return cardApi\r\n            .getCards()\r\n            .then(cards => {\r\n                dispatch(loadCardSuccess(cards));\r\n            })\r\n            .catch(error => {\r\n                dispatch(apiCallError(error));\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n\r\nexport function saveCard(card) {\r\n    //eslint-disable-next-line no-unused-vars\r\n    return function (dispatch, getState) {\r\n        dispatch(beginApiCall());\r\n        return cardApi\r\n            .saveCard(card)\r\n            .then(savedCard => {\r\n                card.id\r\n                    ? dispatch(updateCardSuccess(savedCard))\r\n                    : dispatch(createCardSuccess(savedCard));\r\n            })\r\n            .catch(error => {\r\n                dispatch(apiCallError(error));\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n\r\n\r\nexport function deleteCard(card) {\r\n    return function (dispatch) {\r\n        dispatch(deleteCardOptimistic(card));\r\n        return cardApi.deleteCard(card.id);\r\n    };\r\n}","import * as types from \"./actionTypes\";\r\n\r\nexport function beginApiCall() {\r\n    return { type: types.BEGIN_API_CALL };\r\n}\r\n\r\nexport function apiCallError() {\r\n    return { type: types.API_CALL_ERROR };\r\n}\r\n","\r\n\r\n// groups\r\nexport const LOAD_GROUPS_SUCCESS = \"LOAD_GROUPS_SUCCESS\";\r\nexport const CREATE_GROUP_SUCCESS = \"CREATE_GROUP_SUCCESS\";\r\nexport const UPDATE_GROUP_SUCCESS = \"UPDATE_GROUP_SUCCESS\";\r\n\r\nexport const LOAD_WEATHERS_SUCCESS = \"LOAD_WEATHERS_SUCCESS\";\r\nexport const CREATE_WEATHER_SUCCESS = \"CREATE_WEATHER_SUCCESS\";\r\nexport const UPDATE_WEATHER_SUCCESS = \"UPDATE_WEATHER_SUCCESS\";\r\n\r\nexport const LOAD_CARDS_SUCCESS = \"LOAD_CARDS_SUCCESS\";\r\nexport const CREATE_CARD_SUCCESS = \"CREATE_CARD_SUCCESS\";\r\nexport const UPDATE_CARD_SUCCESS = \"UPDATE_CARD_SUCCESS\";\r\n\r\nexport const BEGIN_API_CALL = \"BEGIN_API_CALL\";\r\nexport const API_CALL_ERROR = \"API_CALL_ERROR\";\r\n\r\nexport const DELETE_COURSE_OPTIMISTIC = \"DELETE_COURSE_OPTIMISTIC\";\r\nexport const DELETE_WEATHER_OPTIMISTIC = \"DELETE_WEATHER_OPTIMISTIC\";\r\nexport const DELETE_CARD_OPTIMISTIC = \"DELETE_CARD_OPTIMISTIC\";\r\nexport const DELETE_GROUP_OPTIMISTIC = \"DELETE_GROUP_OPTIMISTIC\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInput = ({ name, label, onChange, placeholder, value, error }) => {\r\n  let wrapperClass = \"form-group\";\r\n  if (error && error.length > 0) {\r\n    wrapperClass += \" \" + \"has-error\";\r\n  }\r\n\r\n  return (\r\n    <div className={wrapperClass}>\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"field\">\r\n        <input\r\n          type=\"text\"\r\n          name={name}\r\n          className=\"form-control\"\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport TextInput from \"../common/TextInput\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst CardForm = ({\r\n    card,\r\n    onSave,\r\n    onChange,\r\n    saving = false,\r\n    errors = {}\r\n}) => {\r\n\r\n    const [startDate, setStartDate] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        // setStartDate({ startDate })\r\n        card.expireDate = startDate;\r\n    }, [startDate]);\r\n\r\n    return (\r\n        <form className=\"dashboard-wrapper\" onSubmit={onSave}  >\r\n            <div className=\"container-fluid dashboard-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">{card.id ? \"Edit\" : \"Add\"} Card</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {errors.onSave && (\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {errors.onSave}\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"name\"\r\n                                    label=\"Title\"\r\n                                    value={card.name}\r\n                                    onChange={onChange}\r\n                                    error={errors.name}\r\n                                    placeholder={\"Title\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    value={card.description}\r\n                                    onChange={onChange}\r\n                                    error={errors.description}\r\n                                    placeholder={\"Description\"}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"url\"\r\n                                    label=\"URL\"\r\n                                    value={card.url}\r\n                                    onChange={onChange}\r\n                                    error={errors.url}\r\n                                    placeholder={\"URL\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"iconSelect\" className=\"col-form-label text-nowrap\">Display icon</label>\r\n                                <select id=\"iconSelect\" className=\"form-control\">\r\n                                    <option value=\"bookmark\">bookmark</option>\r\n                                    <option value=\"bank\">bank</option>\r\n                                    <option value=\"bullseye\">bullseye</option>\r\n                                    <option value=\"cicle\">cicle</option>\r\n                                    <option value=\"eur\">eur</option>\r\n                                    <option value=\"money\">money</option>\r\n                                    <option value=\"github\">github</option>\r\n                                    <option value=\"windows\">windows</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"groupBySelect\" className=\"col-form-label text-nowrap\">Expire Date</label>\r\n                                <div style={{ marginTop: 0 }} >\r\n                                    <DatePicker\r\n                                        selected={startDate}\r\n                                        onChange={date => setStartDate(date)}\r\n                                        dateFormat=\"dd-MMM-yyyy\"\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" disabled={saving} className=\"btn btn-primary\">\r\n                            {saving ? \"Saving...\" : \"Save\"}\r\n                        </button>\r\n\r\n                    </div> </div> </div>  </form >\r\n    );\r\n};\r\n\r\nCardForm.propTypes = {\r\n    card: PropTypes.object.isRequired,\r\n    errors: PropTypes.object,\r\n    onSave: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    saving: PropTypes.bool,\r\n\r\n};\r\n\r\nexport default CardForm;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes, { number, string } from \"prop-types\";\r\nimport { loadCards, saveCard } from \"../../redux/actions/cardActions\";\r\nimport CardForm from \"./CardForm\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst newCard = {\r\n    id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    url: \"\",\r\n    expireDate: \"\",\r\n\r\n}\r\n\r\n\r\nfunction ManageCardPage({\r\n    cards,\r\n    loadCards,\r\n    saveCard,\r\n    history,\r\n    ...props }) {\r\n    const [card, setCard] = useState({ ...props.card });\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (cards.length === 0) {\r\n            loadCards().catch(error => {\r\n                alert(\"Loading card failed\" + error);\r\n            });\r\n        } else {\r\n            setCard({ ...props.card })\r\n        }\r\n\r\n\r\n    }, [props.card]);\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        setCard(prevCard => ({\r\n            ...prevCard,\r\n            [name]: value\r\n        }));\r\n    }\r\n    function formIsValid() {\r\n        const { name, description, url } = card;\r\n\r\n        const errors = {};\r\n\r\n        if (!name) errors.name = \"Title is required.\";\r\n        if (!description) errors.description = \"Description is required\";\r\n        if (!url) errors.url = \"URL is required\";\r\n\r\n        setErrors(errors);\r\n        // Form is valid if the errors object still has no properties\r\n        return Object.keys(errors).length === 0;\r\n    }\r\n\r\n    function handleSave(event) {\r\n\r\n        event.preventDefault();\r\n        if (!formIsValid()) return;\r\n        setSaving(true);\r\n        saveCard(card).then(() => {\r\n            toast.success(\"Card saved.\");\r\n            history.push(\"/cards\");\r\n        }).catch(error => {\r\n            setSaving(false);\r\n            setErrors({ onSave: error.message });\r\n        });\r\n    }\r\n\r\n\r\n    return cards.length === 0 ? (\r\n        <Spinner />\r\n    ) : (\r\n            <CardForm\r\n                card={card}\r\n                errors={errors}\r\n                onChange={handleChange}\r\n                onSave={handleSave}\r\n                saving={saving}\r\n            />\r\n        )\r\n}\r\n\r\nManageCardPage.propTypes = {\r\n    card: PropTypes.object.isRequired,\r\n    cards: PropTypes.array.isRequired,\r\n    loadCards: PropTypes.func.isRequired,\r\n    saveCard: PropTypes.func.isRequired,\r\n    history: PropTypes.object.isRequired\r\n}\r\n\r\nexport function getCardById(cards, id) {\r\n    return cards.find(card => card.id === id) || null;\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const id = ownProps.match.params.id;\r\n    const card =\r\n        id && state.cards.length > 0\r\n            ? getCardById(state.cards, id)\r\n            : newCard;\r\n    return {\r\n        card,\r\n        cards: state.cards,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCards,\r\n    saveCard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageCardPage);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CardList = ({ cards, onDeleteClick }) => (\r\n\t<div class=\"card\">\r\n\t\t< table className=\"table table-hover\" >\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{/* <th>Id</th> */}\r\n\t\t\t\t\t<th>Title</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Expire date</th>\r\n\t\t\t\t\t<th />\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{cards.map((card) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={card.id}>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{card.name}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>{card.description}</td>\r\n\t\t\t\t\t\t\t<td>{card.expireDate}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<Link to={\"/card/\" + card.id} className=\"btn btn-outline-primary\">Edit</Link>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</table >\r\n\t</div>\r\n);\r\n\r\nCardList.prototype = {\r\n\tcards: PropTypes.array.isRequired,\r\n\tonDeleteClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CardList;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from \"prop-types\";\r\nimport * as cardActions from \"../../redux/actions/cardActions\";\r\nimport CardList from \"./CardList\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass CardPage extends Component {\r\n\r\n    state = {\r\n        redirectToAddCardPage: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { cards, actions } = this.props;\r\n        if (cards.length === 0) {\r\n            actions.loadCards().catch(error => {\r\n                alert(\"Loading Cards failed\" + error);\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDeleteCard = async card => {\r\n        toast.success(\"Card deleted\");\r\n        try {\r\n            await this.props.actions.deleteCard(card);\r\n        } catch (error) {\r\n            toast.error(\"Delete failed. \" + error.message, { autoClose: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"dashboard-wrapper\">\r\n                <div className=\"container-fluid dashboard-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">Cards </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {this.state.redirectToAddCardPage && <Redirect to=\"/card\"></Redirect>}\r\n\r\n                            {this.props.loading ?\r\n                                <Spinner /> : (\r\n                                    <> <button\r\n                                        style={{ marginBottom: 20 }}\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={() => this.setState({ redirectToAddCardPage: true })}\r\n                                    >Add Card</button>\r\n                                        <CardList onDeleteClick={this.handleDeleteCard} cards={this.props.cards} />\r\n                                    </>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCardPage.propTypes = {\r\n    cards: PropTypes.array.isRequired,\r\n    actions: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cards: state.cards,\r\n        loading: state.apiCallsInProgress > 0\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: {\r\n            loadCards: bindActionCreators(cardActions.loadCards, dispatch),\r\n            deleteCard: bindActionCreators(cardActions.deleteCard, dispatch)\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardPage);","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/groups/\";\r\n\r\nexport function getGroups() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveGroup(group) {\r\n  return fetch(baseUrl + (group.id || \"\"), {\r\n    method: group.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(group)\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteGroup(groupId) {\r\n  return fetch(baseUrl + groupId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport * as groupApi from \"../../api/groupApi\";\r\nimport { beginApiCall, apiCallError } from \"./apiStatusActions\";\r\n\r\nexport function loadGroupSuccess(groups) {\r\n    return { type: types.LOAD_GROUPS_SUCCESS, groups }\r\n}\r\n\r\nexport function createGroupSuccess(group) {\r\n    return { type: types.CREATE_GROUP_SUCCESS, group };\r\n}\r\n\r\nexport function updateGroupSuccess(group) {\r\n    return { type: types.UPDATE_GROUP_SUCCESS, group };\r\n}\r\n\r\nexport function deleteGroupOptimistic(group) {\r\n    return { type: types.DELETE_GROUP_OPTIMISTIC, group };\r\n}\r\n\r\nexport function loadGroups() {\r\n    return function (dispatch) {\r\n        dispatch(beginApiCall());\r\n        return groupApi\r\n            .getGroups()\r\n            .then(groups => {\r\n                dispatch(loadGroupSuccess(groups));\r\n            })\r\n            .catch(error => {\r\n                dispatch(apiCallError(error));\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n\r\nexport function saveGroup(group) {\r\n    //eslint-disable-next-line no-unused-vars\r\n    return function (dispatch, getState) {\r\n        dispatch(beginApiCall());\r\n        return groupApi\r\n            .saveGroup(group)\r\n            .then(savedGroup => {\r\n                group.id\r\n                    ? dispatch(updateGroupSuccess(savedGroup))\r\n                    : dispatch(createGroupSuccess(savedGroup));\r\n            })\r\n            .catch(error => {\r\n                dispatch(apiCallError(error));\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n\r\n\r\nexport function deleteGroup(group) {\r\n    return function (dispatch) {\r\n        // Doing optimistic delete, so not dispatching begin/end api call\r\n        // actions, or apiCallError action since we're not showing the loading status for this.\r\n        dispatch(deleteGroupOptimistic(group));\r\n        return groupApi.deleteGroup(group.id);\r\n    };\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GroupList = ({ groups, onDeleteClick }) => (\r\n\r\n\t<div class=\"card\">\r\n\t\t< table className=\"table table-hover\" >\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Group name</th>\r\n\t\t\t\t\t<th>Group description</th>\r\n\t\t\t\t\t<th>Status</th>\r\n\t\t\t\t\t<th />\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{groups.map((group) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={group.id}>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{group.name}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>{group.description}</td>\r\n\t\t\t\t\t\t\t<td>{group.isActive ? \"Active\" : \"Not active\"}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<Link to={\"/group/\" + group.id} className=\"btn btn-outline-primary\">Edit</Link>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t</div>\r\n);\r\n\r\nGroupList.prototype = {\r\n\tgroups: PropTypes.array.isRequired,\r\n\tonDeleteClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupList;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from \"prop-types\";\r\nimport * as groupActions from \"../../redux/actions/groupActions\";\r\nimport * as cardActions from \"../../redux/actions/cardActions\";\r\nimport GroupList from \"./GroupList\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass GroupsPage extends Component {\r\n\r\n    state = {\r\n        redirectToAddGroupPage: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { groups, actions } = this.props;\r\n\r\n        if (groups.length === 0) {\r\n            actions.loadGroups().catch(error => {\r\n                alert(\"Loading groups failed\" + error);\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleDeleteGroup = async group => {\r\n        toast.success(\"Group deleted\");\r\n        try {\r\n            await this.props.actions.deleteGroup(group);\r\n        } catch (error) {\r\n            toast.error(\"Delete failed. \" + error.message, { autoClose: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard-wrapper\">\r\n                <div className=\"container-fluid dashboard-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">Groups </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.redirectToAddGroupPage && <Redirect to=\"/group\"></Redirect>}\r\n\r\n                            {this.props.loading ?\r\n                                <Spinner /> : (\r\n                                    <> <button\r\n                                        style={{ marginBottom: 20 }}\r\n                                        className=\"btn btn-primary add-group\"\r\n                                        onClick={() => this.setState({ redirectToAddGroupPage: true })}>Add Group</button>\r\n\r\n                                        <GroupList onDeleteClick={this.handleDeleteGroup} groups={this.props.groups} />\r\n                                    </>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupsPage.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    actions: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groups:\r\n            state.cards.length === 0\r\n                ? []\r\n                : state.groups.map(group => {\r\n                    return {\r\n                        ...group,\r\n                        cardSelected: state.cards.find(a => a.id === group.id)\r\n                    }\r\n                }),\r\n        cards: state.cards,\r\n        loading: state.apiCallsInProgress > 0\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: {\r\n            loadGroups: bindActionCreators(groupActions.loadGroups, dispatch),\r\n            loadCards: bindActionCreators(cardActions.loadCards, dispatch),\r\n            deleteGroup: bindActionCreators(groupActions.deleteGroup, dispatch)\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupsPage);","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport TextInput from \"../common/TextInput\";\r\nimport SelectInput from \"../common/SelectInput\";\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nconst GroupForm = ({\r\n    group,\r\n    cards,\r\n    onSave,\r\n    onChange,\r\n    saving = false,\r\n    errors = {}\r\n}) => {\r\n\r\n    const [options, setoptions] = useState([{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }]);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     // setStartDate({ startDate })\r\n    //     card.expireDate = startDate;\r\n    // }, [startDate]);\r\n\r\n    function onSelect(event) {\r\n        const id = event.map(x => x.id)\r\n\r\n        group.cards = id;\r\n    }\r\n\r\n    function onRemove(event) {\r\n        const { name, value } = event.target;\r\n        setoptions(prevGroup => ({\r\n            ...prevGroup,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        // group.isActive = event.target.checked\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        const name = target.name;\r\n\r\n        // this.setState({\r\n        //   [name]: value\r\n        // });\r\n    }\r\n    return (\r\n        <form className=\"dashboard-wrapper\" onSubmit={onSave}  >\r\n            <div className=\"container-fluid dashboard-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">{group.id ? \"Edit\" : \"Add\"} Group</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {errors.onSave && (\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {errors.onSave}\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"name\"\r\n                                    label=\"Name\"\r\n                                    value={group.name}\r\n                                    onChange={onChange}\r\n                                    error={errors.name}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    value={group.description}\r\n                                    onChange={onChange}\r\n                                    error={errors.description}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"iconSelect\" className=\"col-form-label text-nowrap\"\r\n                                    style={{ paddingTop: 0 }}\r\n                                >Map card</label>\r\n                                <Multiselect id=\"iconSelect\"\r\n                                    options={cards} // Options to display in the dropdown\r\n                                    selectedValues={group.cardSelected} // Preselected value to persist in dropdown\r\n                                    onSelect={onSelect} // Function will trigger on select event\r\n                                    // onRemove={onRemove} // Function will trigger on remove event\r\n                                    displayValue=\"name\" // Property name to display in the dropdown options\r\n                                    showCheckbox={true}\r\n                                    closeIcon=\"close\"\r\n                                    closeOnSelect={false}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <input type=\"checkbox\"\r\n                                    name=\"isActive\"\r\n                                    value={group.isActive}\r\n                                    id=\"isActive\"\r\n                                    checked={true}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                                <label className=\"form-check-label\" htmlFor=\"isActive\">\r\n                                    &nbsp;&nbsp;Active\r\n                    </label>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" disabled={saving} className=\"btn btn-primary\">\r\n                            {saving ? \"Saving...\" : \"Save\"}\r\n                        </button>\r\n                    </div> </div> </div>  </form >\r\n    );\r\n};\r\n\r\nGroupForm.propTypes = {\r\n    group: PropTypes.object.isRequired,\r\n    errors: PropTypes.object,\r\n    onSave: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    saving: PropTypes.bool\r\n};\r\n\r\nexport default GroupForm;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes, { bool } from \"prop-types\";\r\nimport { loadGroups, saveGroup } from \"../../redux/actions/groupActions\";\r\nimport { loadCards } from \"../../redux/actions/cardActions\";\r\nimport GroupForm from \"./GroupForm\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst newGroup = {\r\n    id: null,\r\n    description: \"\",\r\n\r\n    name: \"\",\r\n    isActive: true,\r\n    cardSelected: []\r\n};\r\n\r\nfunction ManageGroupPage({\r\n    groups,\r\n    cards,\r\n    loadCards,\r\n    loadGroups,\r\n    saveGroup,\r\n    history,\r\n    ...props }) {\r\n    const [group, setGroup] = useState({ ...props.group });\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if (groups.length === 0) {\r\n            loadGroups().catch(error => {\r\n                alert(\"Loading groups failed\" + error);\r\n            });\r\n        } else {\r\n            setGroup({ ...props.group })\r\n        }\r\n\r\n        if (cards.length === 0) {\r\n            loadCards().catch(error => {\r\n                alert(\"Loading cards failed\" + error);\r\n            });\r\n        }\r\n    }, [props.group]);\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        setGroup(prevGroup => ({\r\n            ...prevGroup,\r\n            [name]: value\r\n        }));\r\n    }\r\n    function formIsValid() {\r\n        const { name, description } = group;\r\n        const errors = {};\r\n\r\n        if (!name) errors.name = \"Group name is required.\";\r\n        if (!description) errors.description = \"Group description is required\";\r\n\r\n        setErrors(errors);\r\n        // Form is valid if the errors object still has no properties\r\n        return Object.keys(errors).length === 0;\r\n    }\r\n\r\n    function handleSave(event) {\r\n        event.preventDefault();\r\n        if (!formIsValid()) return;\r\n        setSaving(true);\r\n        saveGroup(group).then(() => {\r\n            toast.success(\"Group saved.\");\r\n            history.push(\"/groups\");\r\n        }).catch(error => {\r\n            setSaving(false);\r\n            setErrors({ onSave: error.message });\r\n        });\r\n    }\r\n    return cards.length === 0 || groups.length === 0 ? (\r\n        <Spinner />\r\n    ) : (\r\n            <>\r\n                <GroupForm\r\n                    group={group}\r\n                    errors={errors}\r\n                    cards={cards}\r\n                    onChange={handleChange}\r\n                    onSave={handleSave}\r\n                    saving={saving}\r\n                />\r\n            </>\r\n        )\r\n}\r\n\r\nManageGroupPage.propTypes = {\r\n    group: PropTypes.object.isRequired,\r\n    cards: PropTypes.array.isRequired,\r\n    groups: PropTypes.array.isRequired,\r\n    loadGroups: PropTypes.func.isRequired,\r\n    loadCards: PropTypes.func.isRequired,\r\n    saveGroup: PropTypes.func.isRequired,\r\n    history: PropTypes.object.isRequired\r\n}\r\n\r\nexport function getGroupBySlug(groups, id) {\r\n    return groups.find(group => group.id === id) || null;\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const id = ownProps.match.params.id;\r\n    const group =\r\n        id && state.groups.length > 0\r\n            ? getGroupBySlug(state.groups, id)\r\n            : newGroup;\r\n    return {\r\n        group,\r\n        groups: state.groups,\r\n        cards: state.cards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadGroups,\r\n    loadCards,\r\n    saveGroup\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageGroupPage);\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst CardView = () => {\r\n\r\n    const [item, setItems] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            setIsLoading(true)\r\n            const result = await axios(\r\n                `${process.env.REACT_APP_API_URL}/cards/${id}`\r\n            )\r\n            setItems(result.data)\r\n            setIsLoading(false)\r\n        }\r\n        fetchItems()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"dashboard-wrapper\">\r\n            <div className=\"container-fluid dashboard-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title text-center\">{item.name}</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                            <div className=\"col-xl-6  col-sm-6  col-lg-6 col-md-6 col-6 text-center\">\r\n                                <h3 className=\"text-center\">{item.description}</h3>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h3 className=\"pageheader-title text-center\"> <u> Synonyms</u></h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                            <div className=\"col-xl-6  col-sm-6  col-lg-6 col-md-6 col-6 text-center\">\r\n                                <h3 className=\"text-center\">{item.synonmys}</h3>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h3 className=\"pageheader-title text-center\"> <u> Meaning</u></h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                            <div className=\"col-xl-6  col-sm-6  col-lg-6 col-md-6 col-6 text-center\">\r\n                                <h3 className=\"text-center\">{item.meaning}</h3>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 text-right\">\r\n\r\n                            </div>\r\n                            <div className=\"col-xl-6  col-sm-6  col-lg-6 col-md-6 col-6 text-center\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Previous\r\n                                </button> <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Next\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CardView;\r\n","import React from \"react\";\r\nconst AuthContext = new React.createContext();\r\nexport default AuthContext;\r\n","import auth0 from \"auth0-js\";\r\n\r\nconst REDIRECT_ON_LOGIN = \"redirect_on_login\";\r\n\r\nlet _expiresAt = null;\r\n\r\nexport default class Auth {\r\n    constructor(history) {\r\n        this.history = history;\r\n        this.userProfile = null;\r\n        this.requestedScopes = \"openid profile email read:courses\";\r\n        this.auth0 = new auth0.WebAuth({\r\n            domain: process.env.REACT_APP_AUTH0_DOMAIN,\r\n            clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\r\n            redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\r\n            audience: process.env.REACT_APP_AUTH0_AUDIENCE,\r\n            responseType: \"token id_token\",\r\n            scope: this.requestedScopes\r\n        });\r\n    }\r\n\r\n    login = () => {\r\n        localStorage.setItem(REDIRECT_ON_LOGIN, JSON.stringify(this.history.location))\r\n        this.auth0.authorize();\r\n    }\r\n\r\n    handleAuthentication = () => {\r\n        this.auth0.parseHash((err, authResult) => {\r\n            if (authResult && authResult.accessToken && authResult.idToken) {\r\n                this.setSession(authResult);\r\n                const redirectLocation =\r\n                    localStorage.getItem(REDIRECT_ON_LOGIN) === \"undefined\"\r\n                        ? \"/\" :\r\n                        JSON.parse(localStorage.getItem(REDIRECT_ON_LOGIN))\r\n                this.history.push(redirectLocation); // redirect to home page\r\n            }\r\n            else if (err) {\r\n                this.history.push(\"/\");\r\n                alert(`Error: ${err.error}`);\r\n            }\r\n            localStorage.removeItem(REDIRECT_ON_LOGIN);\r\n        });\r\n    };\r\n\r\n    setSession = authResult => {\r\n        console.log(authResult);\r\n        const expiresAt = JSON.stringify(\r\n            authResult.expiresIn * 1000 + new Date().getTime()\r\n        );\r\n\r\n        const scopes = authResult.scope || this.requestedScopes || \"\";\r\n\r\n        localStorage.setItem(\"access_token\", authResult.accessToken);\r\n        localStorage.setItem(\"id_token\", authResult.idToken);\r\n        localStorage.setItem(\"expires_at\", expiresAt);\r\n        localStorage.setItem(\"scopes\", JSON.stringify(scopes));\r\n    };\r\n\r\n    isAuthenticated() {\r\n        const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\r\n        return new Date().getTime() < expiresAt;\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem(\"access_token\");\r\n        localStorage.removeItem(\"id_token\");\r\n        localStorage.removeItem(\"expires_at\");\r\n        localStorage.removeItem(\"scopes\");\r\n\r\n        this.auth0.logout({\r\n            clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\r\n            returnTo: \"http://localhost:3000\"\r\n        });\r\n    };\r\n\r\n    getAccessToken = () => {\r\n        const accessToken = localStorage.getItem(\"access_token\");\r\n        if (!accessToken) {\r\n            throw new Error(\"No access token found.\");\r\n        }\r\n        return accessToken;\r\n    };\r\n\r\n    getProfile = cb => {\r\n        if (this.userProfile) {\r\n            cb(this.userProfile);\r\n        }\r\n\r\n        this.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\r\n            if (profile) {\r\n                this.userProfile = profile;\r\n            }\r\n            cb(profile, err);\r\n        });\r\n    };\r\n\r\n    userHasScopes(scopes) {\r\n        const grantedScopes = (\r\n            JSON.parse(localStorage.getItem(\"scopes\")) || \"\"\r\n        ).split(\" \");\r\n        return scopes.every(scope => grantedScopes.includes(scope));\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nclass Callback extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n        if (/access_token|id_token|error/.test(this.props.location.hash)) {\r\n            this.props.auth.handleAuthentication();\r\n        }\r\n        else {\r\n            // throw new Error(\"Invalid callback URL\")\r\n            console.log(\"Invalid callback URL\")\r\n            // alert(\"Invalid callback URL\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Loading...</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Callback;","import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./home/HomePage\";\r\nimport AboutPage from \"./about/AboutPage\";\r\nimport Header from \"./common/Header\";\r\nimport Footer from \"./common/Footer\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport ManageCardPage from './cards/ManageCardPage';\r\nimport CardPage from \"./cards/CardPage\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport GroupsPage from \"./groups/GroupsPage\";\r\nimport ManageGroupPage from './groups/ManageGroupPage';\r\nimport CardView from \"./cardview/cardview\";\r\nimport AuthContext from \"./AuthContext\";\r\nimport Auth from './auth/Auth';\r\nimport Callback from './Callback';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      auth: new Auth(this.props.history),\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.state;\r\n    return (\r\n      <AuthContext.Provider value={auth}>\r\n        <div className=\"dashboard-header \">\r\n          <Header auth={auth} />\r\n          <Switch>\r\n            <Route exact path=\"/home\" auth={auth} component={HomePage} />\r\n            <Route path=\"/callback\"\r\n              render={props => <Callback auth={auth} {...props} />} />\r\n            <Route exact auth={auth} path=\"/\" component={AboutPage} />\r\n            <Route exact auth={auth} path=\"/about\" component={AboutPage} />\r\n            <Route exact auth={auth} path=\"/groups\" component={GroupsPage} />\r\n            <Route exact auth={auth} path=\"/group/:id\" component={ManageGroupPage} />\r\n            <Route exact auth={auth} path=\"/group\" component={ManageGroupPage} />\r\n            <Route exact auth={auth} path=\"/cards\" component={CardPage} />\r\n            <Route exact auth={auth} path=\"/card/:id\" component={ManageCardPage} />\r\n            <Route exact auth={auth} path=\"/card\" component={ManageCardPage} />\r\n            <Route exact auth={auth} path=\"/cardview/:id\" component={CardView} />\r\n            <Route exact auth={auth} component={PageNotFound} />\r\n          </Switch>\r\n          <Footer />\r\n          <ToastContainer autoClose={3000} hideProgressBar />\r\n        </div>\r\n      </AuthContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default {\r\n\r\n    groups: [],\r\n\r\n    cards: [],\r\n    apiCallsInProgress: 0\r\n}","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nfunction actionTypeEndsInSuccess(type) {\r\n    return type.substring(type.length - 8) === \"_SUCCESS\";\r\n}\r\n\r\nexport default function apiCallStatusReducer(\r\n    state = initialState.apiCallsInProgress,\r\n    action\r\n) {\r\n    if (action.type === types.BEGIN_API_CALL) {\r\n        return state + 1;\r\n    } else if (\r\n        action.type === types.API_CALL_ERROR ||\r\n        actionTypeEndsInSuccess(action.type)\r\n    ) {\r\n        return state - 1;\r\n    }\r\n\r\n    return state;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cards from \"./cardReducer\";\r\nimport groups from \"./groupReducer\";\r\nimport apiCallsInProgress from \"./apiStatusReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    groups,\r\n    cards,\r\n    apiCallsInProgress\r\n});\r\n\r\nexport default rootReducer;","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function groupReducer(state = initialState.groups, action) {\r\n    switch (action.type) {\r\n        case types.CREATE_GROUP_SUCCESS:\r\n            return [...state, { ...action.group }];\r\n        case types.UPDATE_GROUP_SUCCESS:\r\n            return state.map(group =>\r\n                group.id === action.group.id ? action.group : group)\r\n        case types.LOAD_GROUPS_SUCCESS:\r\n            return action.groups;\r\n        case types.DELETE_GROUP_OPTIMISTIC:\r\n            return state.filter(group => group.id !== action.group.id);\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function cardReducer(state = initialState.cards, action) {\r\n    switch (action.type) {\r\n        case types.CREATE_CARD_SUCCESS:\r\n            return [...state, { ...action.card }];\r\n        case types.UPDATE_CARD_SUCCESS:\r\n            return state.map(card =>\r\n                card.id === action.card.id ? action.card : card)\r\n        case types.LOAD_CARDS_SUCCESS:\r\n            return action.cards;\r\n        case types.DELETE_CARD_OPTIMISTIC:\r\n            return state.filter(card => card.id !== action.card.id);\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/style.css\";\r\nimport \"./css/circular-std/style.css\";\r\n// import \"./css/fontawesome/css/fontawesome-all.css\";\r\nimport configureStore from \"./redux/configureStore\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ReduxProvider store={store} >\r\n      <Router>\r\n        <Route component={App} />\r\n      </Router>\r\n    </ReduxProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore(initialState) {\r\n    const composeEnhancers =\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n    );\r\n}","module.exports = __webpack_public_path__ + \"static/media/card-img.8d4ab8ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo3.42e252b2.png\";"],"sourceRoot":""}